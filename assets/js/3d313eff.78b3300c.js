"use strict";(self.webpackChunkfhircore=self.webpackChunkfhircore||[]).push([[1998],{5006:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var r=n(4848),i=n(8453);const s={title:"Save form as draft"},o=void 0,a={id:"engineering/app/configuring/forms/save-form-as-draft",title:"Save form as draft",description:"This is support for saving a form, that is in progress, as a draft.",source:"@site/docs/engineering/app/configuring/forms/save-form-as-draft.mdx",sourceDirName:"engineering/app/configuring/forms",slug:"/engineering/app/configuring/forms/save-form-as-draft",permalink:"/engineering/app/configuring/forms/save-form-as-draft",draft:!1,unlisted:!1,editUrl:"https://github.com/opensrp/fhircore/tree/main/docs/engineering/app/configuring/forms/save-form-as-draft.mdx",tags:[],version:"current",frontMatter:{title:"Save form as draft"},sidebar:"defaultSidebar",previous:{title:"Forms",permalink:"/engineering/app/configuring/forms/"},next:{title:"Unique ID assignment",permalink:"/engineering/app/configuring/forms/unique-ids"}},l={},d=[{value:"Sample use cases",id:"sample-use-cases",level:2},{value:"Config properties",id:"config-properties",level:2},{value:"UI/UX workflow",id:"uiux-workflow",level:2},{value:"Alert dialog buttons descriptions",id:"alert-dialog-buttons-descriptions",level:3}];function c(e){const t={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"This is support for saving a form, that is in progress, as a draft."}),"\n",(0,r.jsx)(t.p,{children:'This functionality is only relevant to forms that are unique and only expected to be filled out once.\nThis excludes forms such as "register client" or "register household".'}),"\n",(0,r.jsx)(t.h2,{id:"sample-use-cases",children:"Sample use cases"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"A counseling session cannot be completed in one sitting, so the counselor would like to save the incomplete session and continue it in the next session"}),"\n",(0,r.jsx)(t.li,{children:"A health care worker does not have the answer to a mandatory question (e.g. lab results) and cannot submit the form until it is answered; they also do not want to discard the data they have already entered"}),"\n",(0,r.jsx)(t.li,{children:"A patient meets with multiple providers during a clinic visit. They would like the ability for the form to be started by one worker and completed by another worker"}),"\n",(0,r.jsx)(t.li,{children:"A health care worker is doing a child visit and the mother goes to get the child's health card to update the immunization history. Meanwhile, the health care worker wants to proceed to measure the child's MUAC (which is collected in a different form)"}),"\n",(0,r.jsx)(t.li,{children:"A health care worker is doing a household visit and providing care to multiple household members. They want the ability to start a workflow and switch to another workflow without losing their data"}),"\n",(0,r.jsx)(t.li,{children:"A health care worker is required to collect data in both the app and on paper. They start a form in the app, but are under time pressure, so they fill out the paper form and plan to enter the data in the app later"}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["The configuration is done on the ",(0,r.jsx)(t.code,{children:"QuestionnaireConfig"}),".\nThe sample below demonstrates the configs that are required in order to save a form as a draft"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'{\n  "questionnaire": {\n    "id": "add-family-member",\n    "title": "Add Family Member",\n    "resourceIdentifier": "sample-house-id",\n    "resourceType": "Group",\n    "saveDraft": true\n  }\n}\n'})}),"\n",(0,r.jsx)(t.h2,{id:"config-properties",children:"Config properties"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Required"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Default"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"id"}),(0,r.jsx)(t.td,{children:"Questionnaire Unique ID String"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"yes"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"title"}),(0,r.jsx)(t.td,{children:"Display text shown when the form is loaded"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"no"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"resourceIdentifier"}),(0,r.jsx)(t.td,{children:"Unique ID String for the subject of the form"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}}),(0,r.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"resourceType"}),(0,r.jsx)(t.td,{children:"The String representation of the resource type for the subject of the form"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"yes"}),(0,r.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"saveDraft"}),(0,r.jsx)(t.td,{children:"Flag that determines whether the form can be saved as a draft"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"yes"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"false"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"uiux-workflow",children:"UI/UX workflow"}),"\n",(0,r.jsxs)(t.p,{children:["When the form is opened, with the configurations in place, the save as draft functionality is triggered when the user clicks on the close button (X) at the top left of the screen.\nA dialog appears with 3 buttons i.e ",(0,r.jsx)(t.code,{children:"Save as draft"}),", ",(0,r.jsx)(t.code,{children:"Discard changes"})," and ",(0,r.jsx)(t.code,{children:"Cancel"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"The table below details what each of the buttons does."}),"\n",(0,r.jsx)(t.h3,{id:"alert-dialog-buttons-descriptions",children:"Alert dialog buttons descriptions"}),"\n",(0,r.jsx)(t.p,{children:"|Button | Description |\n|--|--|:--:|:--:|\nSave as draft | Saves user input as a draft |\nDiscard changes | Dismisses user input, and closes the form without saving the draft. |\nCancel | Dismisses the dialog so that the user can continue interacting with the form |"})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var r=n(6540);const i={},s=r.createContext(i);function o(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);