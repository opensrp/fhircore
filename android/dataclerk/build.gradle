plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'de.mannodermaus.android-junit5' version '1.9.3.0'
    id 'org.jetbrains.dokka'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'jacoco'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.firebase.firebase-perf'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

apply from: '../properties.gradle'

android {
    namespace 'org.dtree.fhircore.dataclerk'
    compileSdkVersion sdk_versions.compile_sdk

    defaultConfig {
        applicationId "org.dtree.fhircore.dataclerk"
        minSdkVersion sdk_versions.min_sdk
        targetSdkVersion sdk_versions.target_sdk
        versionCode 3
        versionName "1.0.0"
        multiDexEnabled true

        buildConfigField("boolean", 'SKIP_AUTH_CHECK', "false")
        buildConfigField("String", 'FHIR_BASE_URL', "\"${FHIR_BASE_URL}\"")
        buildConfigField("String", 'OAUTH_BASE_URL', "\"${OAUTH_BASE_URL}\"")
        buildConfigField("String", 'OAUTH_CIENT_ID', "\"${OAUTH_CIENT_ID}\"")
        buildConfigField("String", 'OAUTH_CLIENT_SECRET', "\"${OAUTH_CLIENT_SECRET}\"")
        buildConfigField("String", 'OAUTH_SCOPE', "\"${OAUTH_SCOPE}\"")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

//    signingConfigs {
//        release {
//
//            v1SigningEnabled false
//            v2SigningEnabled true
//
//            keyAlias System.getenv("KEYSTORE_ALIAS")?: project.KEYSTORE_ALIAS
//            keyPassword System.getenv("KEY_PASSWORD") ?: project.KEY_PASSWORD
//            storePassword System.getenv("KEYSTORE_PASSWORD") ?: project.KEYSTORE_PASSWORD
//            storeFile file(System.getProperty("user.home") + "/fhircore.keystore.jks")
//        }
//    }

    buildTypes {
        debug {
//            testCoverageEnabled true
            resValue("string", "authenticator_account_type", "\"${android.defaultConfig.applicationId}\"")
        }
        release {
            resValue("string", "authenticator_account_type", "\"${android.defaultConfig.applicationId}\"")
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
//            firebaseCrashlytics {
//                nativeSymbolUploadEnabled false
//            }
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
        freeCompilerArgs = ['-Xjvm-default=all-compatibility', '-opt-in=kotlin.RequiresOptIn']
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.4.8'
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
            all {
                beforeTest { testDescriptor ->
                    println "${testDescriptor.className} > ${testDescriptor.name} STARTED"
                }
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    configurations.all {
        resolutionStrategy {
            force "ca.uhn.hapi.fhir:org.hl7.fhir.utilities:5.5.7"
        }
    }

    packagingOptions {
        exclude 'META-INF/ASL-2.0.txt'
        exclude 'META-INF/LGPL-3.0.txt'
        exclude 'license.html'
        exclude 'readme.html'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/license.html'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE.md'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/ASL-2.0.txt'
        exclude 'META-INF/LGPL-3.0.txt'
        exclude 'META-INF/sun-jaxb.episode'
        exclude("META-INF/*.kotlin_module")
        exclude("META-INF/AL2.0")
        exclude("META-INF/LGPL2.1")
    }
}

dependencies {
    coreLibraryDesugaring deps.desugar
    implementation(project(":engine"))

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.5.1'

    implementation deps.accompanist.swiperefresh

    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation "androidx.paging:paging-compose:3.2.0-rc01"

    //Hilt - Dependency Injection
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-compiler:$hiltVersion"

    // analytics
    implementation platform('com.google.firebase:firebase-bom:31.2.0')

    implementation 'com.google.firebase:firebase-perf-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}

kapt {
    correctErrorTypes true
}

hilt {
    enableAggregatingTask = true
}