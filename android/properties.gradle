//FHIR CORE CREDENTIALS
ext.props = new Properties()

def fhirAuthArray = ["FHIR_BASE_URL", "OAUTH_BASE_URL", "OAUTH_CIENT_ID", "OAUTH_CLIENT_SECRET", "OAUTH_SCOPE"]
if (rootProject.file("local.properties").exists()) {
    props.load(rootProject.file("local.properties").newDataInputStream())

    fhirAuthArray.each { prop ->
        project.ext.set(prop, props.getProperty(prop, (prop == "FHIR_BASE_URL") ? "https://sample.url/fhir/" : "sample"))
    }
} else {
    println("local.properties does not exist. The following values are required " + fhirAuthArray.join(", "))
    fhirAuthArray.each { prop ->
        project.ext.set(prop, props.getProperty(prop, (prop.contains("URL")) ? "https://sample.url/fhir/" : "sample_" + prop))
    }
}

//KEYSTORE CREDENTIALS
ext.keystoreProperties = new Properties()
def keystoreArray = ["KEYSTORE_ALIAS", "KEYSTORE_PASSWORD", "KEY_PASSWORD", "KEYSTORE_LOCATION"]
if (rootProject.file("keystore.properties").exists()) {
    keystoreProperties.load(rootProject.file("keystore.properties").newDataInputStream())

    keystoreArray.each { prop ->
        project.ext.set(prop, keystoreProperties.getProperty(prop, "****"))
    }
} else {
    println("keystore.properties does not exist. The following values are required " + keystoreArray.join(", "))
    keystoreArray.each { prop ->
        project.ext.set(prop, keystoreProperties.getProperty(prop, "****"))
    }
}