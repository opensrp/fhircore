map "http://hl7.org/fhir/StructureMap/12057" = 'PatientRegistration'

uses "http://hl7.org/fhir/StructureDefinition/QuestionnaireReponse" as source
uses "http://hl7.org/fhir/StructureDefinition/Bundle" as target

group PatientRegistration(source src : QuestionnaireResponse, target bundle: Bundle) {
    src -> bundle.type = 'collection' "r_bun_type";
    src -> bundle.entry as entry, entry.resource = create('Patient') as patient then
        ExtractPatient(src, patient), ExtractFamilyFlag(src, bundle, patient) "r_bun_entries";
}

group ExtractPatient(source src : QuestionnaireResponse, target patient : Patient) {
    src -> patient.id = uuid() "r_p_id";

    src.item as item_bio where(linkId = 'bio') then {
       item_bio.item as item_name where(linkId = 'PR-name') -> patient.name = create('HumanName') as patientName then {
          src -> patientName.family = evaluate(item_name, $this.item.where(linkId = 'PR-name-family').answer.value) "r_p_fname";
          src -> patientName.given = evaluate(item_name, $this.item.where(linkId = 'PR-name-given').answer.value) "r_p_gname";
       } "r_p_name";

       item_bio.item as item_iden where(linkId = 'PR-identifier-info') -> patient.identifier = create('Identifier') as patientIdent then {
         src -> patientIdent.value = evaluate(item_iden, $this.item.where(linkId = 'PR-identifier-nid').answer.value) "r_p_iden_val";
       } "r_p_iden";

       src -> patient.gender = evaluate(item_bio, $this.item.where(linkId = 'PR-gender').answer.value.code) "r_p_gender";

       item_bio.item as item_dob where(linkId = 'PR-birth-date' and answer.count() > 0) -> patient.birthDate = evaluate(item_dob, $this.answer.value) "r_p_dob";
       item_bio.item as item_age where(linkId = 'PR-age' and answer.count() > 0) -> patient.birthDate = evaluate(item_age, today() - ($this.answer.value.toString() + " 'years'").toQuantity()) "r_p_age";

       src -> patient.active = evaluate(item_bio, $this.item.where(linkId = 'PR-active').answer.value) "r_p_act";
    };

   src.item as item_addr where (linkId = 'PR-address') -> patient.address = create('Address') as patientAddress then {
      src -> patientAddress.district = evaluate(item_addr, $this.item.where(linkId = 'PR-address-district').answer.value) "r_p_add_dist";
      src -> patientAddress.line = evaluate(item_addr, $this.item.where(linkId = 'PR-address-line').answer.value) "r_p_add_line";
      src -> patientAddress.use = "home" "r_p_add_use";
      src -> patientAddress.type = "physical" "r_p_add_typ";
   } "r_p_addr";

   src.item as item_head where (linkId = 'head_record_id') -> patient.link = create('Patient_Link') as link then {
       src -> link.type = 'refer' "r_p_link_typ";
       src -> link.other = create('Reference') as other then {
           src -> other.reference = evaluate(item_head, 'Patient/' + answer.value) "r_p_link_ref";
       } "r_p_link_other";
   } "r_p_link";
}

group ExtractFamilyFlag(source src : QuestionnaireResponse, target bundle : Bundle, target patient : Patient) {
   // add family tag and flag if response has family item
   src.item as item_family where (linkId = 'family') -> c("https://www.snomed.org", "35359004", "Family") as familyCode then {
      // bug in fhir sdk which does not set display value of coding
      src -> familyCode.display = 'Family' "r_fm_code_disp";

      src -> patient.meta = create("Meta") as meta then {
          src -> meta.tag = familyCode "r_p_tag_fmly";
      } "r_p_tag";

      src -> patient.extension = create("Extension") as ext then {
          src -> ext.url = 'http://hl7.org/fhir/StructureDefinition/flag-detail' "r_p_ext_fmly_url";
          src -> ext.value = 'Family' "r_p_ext_fmly_val";
      } "r_p_ext";

      src -> bundle.entry as entry, entry.resource = create('Flag') as flg then {
        src -> flg.id = uuid() "r_f_id";
        src -> flg.period = create('Period') as fPer then {
            src -> fPer.start = evaluate(src, now()) "r_f_start_date";
        } "r_f_per";
        src -> flg.status = 'active' "r_f_status";
        src -> flg.subject = reference(patient) "r_c_sub";
        src -> flg.code = create('CodeableConcept') as ccFamily then {
          src -> ccFamily.coding = familyCode "r_f_code_fmly";
          src -> ccFamily.text = "Family" "r_f_cod_text";
       } "r_f_code";
      } "r_flag";
   } "r_family";
}