plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'de.mannodermaus.android-junit5'
    id 'org.jetbrains.dokka'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'jacoco'
    id 'dagger.hilt.android.plugin'
}

apply from: '../jacoco.gradle'
apply from: '../properties.gradle'

android {
    compileSdkVersion sdk_versions.compile_sdk

    dataBinding {
        enabled true
    }

    defaultConfig {
        applicationId "org.smartregister.fhircore"
        minSdkVersion sdk_versions.min_sdk
        targetSdkVersion sdk_versions.target_sdk
        versionCode 4
        versionName "0.0.4"
        multiDexEnabled true

        buildConfigField("boolean", 'SKIP_AUTH_CHECK', "false")
        buildConfigField("String", 'FHIR_BASE_URL', "\"${FHIR_BASE_URL}\"")
        buildConfigField("String", 'OAUTH_BASE_URL', "\"${OAUTH_BASE_URL}\"")
        buildConfigField("String", 'OAUTH_CIENT_ID', "\"${OAUTH_CIENT_ID}\"")
        buildConfigField("String", 'OAUTH_CLIENT_SECRET', "\"${OAUTH_CLIENT_SECRET}\"")
        buildConfigField("String", 'OAUTH_SCOPE', "\"${OAUTH_SCOPE}\"")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {

            v1SigningEnabled false
            v2SigningEnabled true

            keyAlias System.getenv("KEYSTORE_ALIAS")?: project.KEYSTORE_ALIAS
            keyPassword System.getenv("KEY_PASSWORD") ?: project.KEY_PASSWORD
            storePassword System.getenv("KEYSTORE_PASSWORD") ?: project.KEYSTORE_PASSWORD
            storeFile file(System.getProperty("user.home") + "/fhircore.keystore.jks")
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'META-INF/ASL-2.0.txt'
        exclude 'META-INF/LGPL-3.0.txt'
        exclude 'license.html'
        exclude 'readme.html'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/license.html'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE.md'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/ASL-2.0.txt'
        exclude 'META-INF/LGPL-3.0.txt'
        exclude 'META-INF/sun-jaxb.episode'
        exclude("META-INF/*.kotlin_module")
        exclude("META-INF/AL2.0")
        exclude("META-INF/LGPL2.1")
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
        freeCompilerArgs = ['-Xjvm-default=compatibility', '-opt-in=kotlin.RequiresOptIn']
    }

    buildFeatures {
        compose true
        viewBinding true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
            all {
                beforeTest { testDescriptor ->
                    println "${testDescriptor.className} > ${testDescriptor.name} STARTED"
                }
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    flavorDimensions "apps"

    productFlavors {
        quest {
            dimension "apps"
            applicationIdSuffix ".quest"
            versionNameSuffix "-quest"
            getIsDefault().set(true)
        }
        ecbis {
            dimension "apps"
            applicationIdSuffix ".ecbis"
            versionNameSuffix "-ecbis"
            versionCode 3
            versionName "0.0.6"
        }
        g6pd {
            dimension "apps"
            applicationIdSuffix ".g6pd"
            versionNameSuffix "-g6pd"
        }
        mwcore {
            dimension "apps"
            applicationIdSuffix ".mwcore"
            versionNameSuffix "-mwcore"
            versionCode 16
            versionName "0.1.6"
        }
        mwcoreDev {
            dimension "apps"
            applicationIdSuffix ".mwcoreDev"
            versionNameSuffix "-mwcoreDev"
            versionCode 16
            versionName "0.1.6"
        }
        afyayangu {
            dimension "apps"
            applicationIdSuffix ".afyayangu"
            versionNameSuffix "-afyayangu"
            versionCode 1
            versionName "0.0.1"
        }
    }

    configurations.all {
        resolutionStrategy {
            force "ca.uhn.hapi.fhir:org.hl7.fhir.utilities:5.5.7"
        }
    }

}

dependencies {
    coreLibraryDesugaring deps.desugar
    implementation(project(":engine"))
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.work:work-runtime-ktx:2.7.1'
    implementation 'androidx.ui:ui-foundation:0.1.0-dev03'
    implementation deps.lifecycle.viewmodel
    implementation('org.smartregister:p2p-lib:0.3.0-SNAPSHOT')
    implementation deps.accompanist.swiperefresh

    implementation 'com.github.anrwatchdog:anrwatchdog:1.4.0'

    //Hilt - Dependency Injection
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-compiler:$hiltVersion"

    testImplementation deps.junit5_api
    testRuntimeOnly deps.junit5_engine
    testRuntimeOnly deps.junit5_engine_vintage
    testImplementation deps.robolectric
    testImplementation deps.atsl.ext_junit
    testImplementation deps.atsl.ext_junit_ktx
    testImplementation deps.coroutines.test
    testImplementation deps.androidx.core_test
    debugImplementation deps.fragment_testing
    releaseImplementation deps.fragment_testing
    testImplementation deps.mockk
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0'

    // Hilt test dependencies
    testImplementation("com.google.dagger:hilt-android-testing:$hiltVersion")
    kaptTest("com.google.dagger:hilt-android-compiler:$hiltVersion")

    androidTestImplementation deps.atsl.ext_junit
    androidTestImplementation deps.atsl.espresso
    def composeVersion = "1.1.1"
    debugImplementation("androidx.compose.ui:ui-test-manifest:$composeVersion")
    testImplementation("androidx.compose.ui:ui-test-junit4:$composeVersion")
//     debugImplementation because LeakCanary should only run in debug builds.
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    testImplementation 'info.cqframework:cql-to-elm:1.5.0'
}
