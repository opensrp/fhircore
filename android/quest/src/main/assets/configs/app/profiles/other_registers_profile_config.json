{
  "appId": "app",
  "configType": "profile",
  "id": "otherRegistersProfile",
  "fhirResource": {
    "baseResource": {
      "resource": "Condition"
    },
    "relatedResources": [
      {
        "resource": "Patient",
        "fhirPathExpression": "Condition.subject",
        "relatedResources": [
          {
            "resource": "CarePlan",
            "searchParameter": "subject"
          },
          {
            "resource": "Task",
            "searchParameter": "subject",
            "sortConfigs": [
              {
                "paramName": "period",
                "dataType": "DATE"
              }
            ]
          }
        ]
      }
    ]
  },
  "rules": [
    {
      "name": "patientFirstName",
      "condition": "true",
      "actions": [
        "data.put('patientFirstName', fhirPath.extractValue(Patient.get(0), \"Patient.name[0].select(given[0])\"))"
      ]
    },
    {
      "name": "patientMiddleName",
      "condition": "true",
      "actions": [
        "data.put('patientMiddleName', fhirPath.extractValue(Patient.get(0), \"Patient.name[0].select(text)\"))"
      ]
    },
    {
      "name": "patientLastName",
      "condition": "true",
      "actions": [
        "data.put('patientLastName', fhirPath.extractValue(Patient.get(0), \"Patient.name[0].select(family)\"))"
      ]
    },
    {
      "name": "patientName",
      "condition": "true",
      "actions": [
        "data.put('patientName', data.get('patientFirstName') + ' ' + data.get('patientMiddleName') + ' ' + data.get('patientLastName'))"
      ]
    },
    {
      "name": "patientActive",
      "condition": "true",
      "actions": [
        "data.put('patientActive', fhirPath.extractValue(Patient.get(0), 'Patient.active'))"
      ]
    },
    {
      "name": "patientTextColor",
      "condition": "true",
      "actions": [
        "data.put('patientTextColor', Patient.active ? '#000000' : 'DefaultColor')"
      ]
    },
    {
      "name": "patientIdentifier",
      "condition": "true",
      "actions": [
        "data.put('patientIdentifier', fhirPath.extractValue(Patient.get(0), 'Patient.identifier[0].value'))"
      ]
    },
    {
      "name": "patientId",
      "condition": "true",
      "actions": [
        "data.put('patientId', fhirPath.extractValue(Patient.get(0), 'Patient.id'))"
      ]
    },
    {
      "name": "patientAge",
      "condition": "true",
      "actions": [
        "data.put('patientAge', service.extractAge(Patient.get(0)))"
      ]
    },
    {
      "name": "patientGender",
      "condition": "true",
      "actions": [
        "data.put('patientGender', service.extractGender(Patient.get(0)))"
      ]
    },
    {
      "name": "patientDOB",
      "condition": "true",
      "actions": [
        "data.put('patientDOB', service.extractDOB(Patient.get(0), 'MM/dd/YY'))"
      ]
    },
    {
      "name": "isChild",
      "condition": "true",
      "actions": [
        "data.put('isChild', fhirPath.extractValue(Patient, \"Patient.active and (Patient.birthDate >= today() - 5 'years')\"))"
      ]
    },
    {
      "name": "canBearChild",
      "condition": "true",
      "actions": [
        "data.put('canBearChild',  fhirPath.extractValue(Patient, \"Patient.active and Patient.gender = 'female' and ((Patient.birthDate <= today() - 15 'years') and (Patient.birthDate >= today() - 49 'years'))\"))"
      ]
    },
    {
      "name": "isEligibleForFP",
      "condition": "true",
      "actions": [
        "data.put('isEligibleForFP',  fhirPath.extractValue(Patient, \"Patient.active and ((Patient.birthDate <= today() - 15 'years') and (Patient.birthDate >= today() - 49 'years'))\"))"
      ]
    },
    {
      "name": "isPregnant",
      "condition": "true",
      "actions": [
        "data.put('isPregnant', service.evaluateToBoolean(Condition, \"Condition.code.coding.code = '77386006' and Condition.clinicalStatus.coding.code = 'active'\", false))"
      ]
    },
    {
      "name": "canRegisterPregnancy",
      "condition": "true",
      "actions": [
        "data.put('canRegisterPregnancy', data.get('canBearChild') and data.get('isPregnant'))"
      ]
    },
    {
      "name": "isChildUnder2months",
      "condition": "true",
      "actions": [
        "data.put('isChildUnder2months', fhirPath.extractValue(Patient, \"Patient.active and (Patient.birthDate > today() - 2 'months')\"))"
      ]
    },
    {
      "name": "isChildOver2months",
      "condition": "true",
      "actions": [
        "data.put('isChildOver2months', fhirPath.extractValue(Patient, \"Patient.active and ((Patient.birthDate <= today() - 2 'months') and (Patient.birthDate >= today() - 5 'years'))\"))"
      ]
    },
    {
      "name": "canHavePregnancyOutcome",
      "condition": "true",
      "actions": [
        "data.put('canHavePregnancyOutcome', data.get('canBearChild'))"
      ]
    },
    {
      "name": "fpConditionId",
      "condition": "true",
      "actions": [
        "data.put('fpConditionId', fhirPath.extractValue(service.filterResources(Condition, 'Condition.code.coding.code', '99998888').get(0), 'Condition.id.replace(\"Condition/\",\"\")') )"
      ]
    }
  ],
  "views": [
    {
      "viewType": "COLUMN",
      "children": [
        {
          "viewType": "CARD",
          "padding": 0,
          "content": [
            {
              "viewType": "COLUMN",
              "children": [
                {
                  "viewType": "COMPOUND_TEXT",
                  "primaryText": "@{patientName}",
                  "primaryTextColor": "#000000"
                },
                {
                  "viewType": "COMPOUND_TEXT",
                  "primaryText": "ID: #@{patientIdentifier}",
                  "primaryTextColor": "#000000"
                },
                {
                  "viewType": "SPACER",
                  "height": 10
                },
                {
                  "viewType": "PERSONAL_DATA",
                  "personalDataItems": [
                    {
                      "label": {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "Sex",
                        "primaryTextColor": "#000000"
                      },
                      "displayValue": {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "@{patientGender}",
                        "fontSize": 14,
                        "primaryTextColor": "#000000"
                      }
                    },
                    {
                      "label": {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "Age",
                        "primaryTextColor": "#000000"
                      },
                      "displayValue": {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "@{patientAge}",
                        "fontSize": 14,
                        "primaryTextColor": "#000000"
                      }
                    },
                    {
                      "label": {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "DOB",
                        "primaryTextColor": "#000000"
                      },
                      "displayValue": {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "@{patientDOB}",
                        "fontSize": 14,
                        "primaryTextColor": "#000000"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "viewType": "SPACER",
          "height": 16
        },
        {
          "viewType": "CARD",
          "padding": 16,
          "header": {
            "viewType": "COMPOUND_TEXT",
            "primaryText": "VISITS",
            "primaryTextColor": "#6F7274",
            "fontSize": 18.0,
            "padding": 16
          },
          "content": [
            {
              "viewType": "LIST",
              "baseResource": "Task",
              "registerCard": {
                "rules": [
                  {
                    "name": "taskStatus",
                    "condition": "true",
                    "actions": [
                      "data.put('taskStatus', fhirPath.extractValue(Task, 'Task.status'))"
                    ]
                  },
                  {
                    "name": "taskStatusColorCode",
                    "condition": "true",
                    "actions": [
                      "data.put('taskStatusColorCode', data.get('taskStatus').equals('ready') ? 'DUE' : data.get('taskStatus').equals('failed') || data.get('taskStatus').equals('cancelled') ? 'OVERDUE' : data.get('taskStatus').equals('requested') ? 'UPCOMING' : data.get('taskStatus').equals('completed') ? 'COMPLETED' : 'UPCOMING')"
                    ]
                  },
                  {
                    "name": "taskExecutionStartDate",
                    "condition": "true",
                    "actions": [
                      "data.put('taskExecutionStartDate', fhirPath.extractValue(Task, 'Task.executionPeriod.start'))"
                    ]
                  },
                  {
                    "name": "taskPeriodDueDate",
                    "condition": "true",
                    "actions": [
                      "data.put('taskPeriodDueDate', service.formatDate(data.get('taskExecutionStartDate'), \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"dd MMM yyyy\"))"
                    ]
                  },
                  {
                    "name": "taskDescription",
                    "condition": "true",
                    "actions": [
                      "data.put('taskDescription', fhirPath.extractValue(Task, 'Task.description'))"
                    ]
                  },
                  {
                    "name": "taskDescriptionWithStartDate",
                    "condition": "true",
                    "priority": 2,
                    "actions": [
                      "data.put('taskDescriptionWithStartDate', data.get('taskDescription') + ' ' + 'due on' + ' ' + data.get('taskPeriodDueDate'))"
                    ]
                  },
                  {
                    "name": "taskId",
                    "condition": "true",
                    "actions": [
                      "data.put('taskId', fhirPath.extractValue(Task, 'Task.id'))"
                    ]
                  },
                  {
                    "name": "taskQuestionnaireId",
                    "condition": "true",
                    "actions": [
                      "data.put('taskQuestionnaireId', fhirPath.extractValue(Task, 'Task.reasonReference.reference'))"
                    ]
                  },
                  {
                    "name": "taskFor",
                    "condition": "true",
                    "actions": [
                      "data.put('taskFor', fhirPath.extractValue(Task, 'Task.for.reference'))"
                    ]
                  }
                ],
                "views": [
                  {
                    "viewType": "BUTTON",
                    "smallSized": "true",
                    "text": "@{taskDescriptionWithStartDate}",
                    "status": "@{taskStatusColorCode}",
                    "visible": "true",
                    "enabled": "@{patientActive}",
                    "actions": [
                      {
                        "trigger": "ON_CLICK",
                        "workflow": "LAUNCH_QUESTIONNAIRE",
                        "questionnaire": {
                          "id": "@{taskQuestionnaireId}",
                          "title": "@{taskDescription}",
                          "resourceIdentifier": "@{taskFor}",
                          "saveButtonText": "Save",
                          "taskId": "@{taskId}",
                          "planDefinitions": [
                            "9fac39bd-9750-4c1d-b355-1961de4e37f3"
                          ]
                        },
                        "params": [
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "772e0f8a-829a-11ed-a1eb-0242ac120002",
                            "dataType": "STRING",
                            "key": "fpConditionId",
                            "value": "@{fpConditionId}"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "overFlowMenuItems": [
    {
      "title": "Registration info",
      "titleColor": "@{patientTextColor}",
      "visible": "true",
      "enabled": "@{patientActive}",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "e5155788-8831-4916-a3f5-486915ce34b2",
            "title": "Member registration info",
            "saveButtonText": "Update registration",
            "setPractitionerDetails": true,
            "setOrganizationDetails": true,
            "type": "EDIT",
            "resourceIdentifier": "@{patientId}",
            "planDefinitions": [
              "9fac39bd-9750-4c1d-b355-1961de4e37f3"
            ]
          }
        }
      ]
    },
    {
      "title": "Record as Sick",
      "titleColor": "@{patientTextColor}",
      "visible": "@{isChildOver2months}",
      "enabled": "@{patientActive}",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "3276f55c-b25e-455b-ae4e-8846fb8fd039",
            "title": "Record sick child",
            "resourceIdentifier": "@{patientId}",
            "planDefinitions": [
              "4ac4f9d6-6fc7-45bf-9a29-398798fc3134"
            ]
          }
        }
      ]
    },
    {
      "title": "Record as Sick",
      "titleColor": "@{patientTextColor}",
      "visible": "@{isChildUnder2months}",
      "enabled": "@{patientActive}",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "58fbddae-c5a0-4b86-832e-f516c96f3b85",
            "title": "Record sick child",
            "resourceIdentifier": "@{patientId}",
            "planDefinitions": [
              "4ac4f9d6-6fc7-45bf-9a29-398798fc3134"
            ]
          }
        }
      ]
    },
    {
      "title": "Register Pregnancy",
      "titleColor": "@{patientTextColor}",
      "visible": "@{canBearChild}",
      "enabled": "@{patientActive}",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "9b22f3ed-e7e1-4222-bf72-1ced42696189",
            "title": "Record to ANC",
            "resourceIdentifier": "@{patientId}",
            "planDefinitions": [
              "a881d53a-590c-4d52-ae0f-c87b7ff04148"
            ]
          },
          "params": [
            {
              "paramType": "PREPOPULATE",
              "linkId": "e152df80-7f89-11ed-a1eb-0242ac120002",
              "dataType": "STRING",
              "key": "fpConditionId",
              "value": "@{fpConditionId}"
            }
          ]
        }
      ]
    },
    {
      "title": "Pregnancy Outcome",
      "titleColor": "@{patientTextColor}",
      "visible": "@{canBearChild}",
      "enabled": "@{patientActive}",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "405619ff-cde8-4379-b674-0a4735098b33",
            "title": "Pregnancy outcome",
            "resourceIdentifier": "@{patientId}",
            "planDefinitions": [
              "07200c16-b2d6-4d7d-a53f-128115b0ab2f"
            ]
          }
        }
      ]
    },
    {
      "title": "Enroll to FP",
      "titleColor": "@{patientTextColor}",
      "visible": "@{isEligibleForFP}",
      "enabled": "@{patientActive}",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "4acc8776-32b0-4440-a1b1-a11a12d79acb",
            "title": "Enroll to family planning",
            "resourceIdentifier": "@{patientId}",
            "planDefinitions": [
              "d6263f2d-2ebe-456c-bbb7-786dabd3ea22",
              "cd39380b-2359-4b98-8ab9-df7f90fe9392"
            ]
          }
        }
      ]
    },
    {
      "title": "Register with Disease",
      "titleColor": "@{patientTextColor}",
      "visible": "true",
      "enabled": "@{patientActive}",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "f7004382-ba3d-4f62-a687-6e9d18c09d3a",
            "resourceIdentifier": "@{patientId}",
            "title": "Diseases Registration Form",
            "planDefinitions": [
              "55d89227-3a06-4a9a-b526-2819dcb1d301",
              "d6263f2d-2ebe-456c-bbb7-786dabd3ea22"
            ]
          }
        }
      ]
    },
    {
      "title": "Remove this person",
      "titleColor": "#FF0000",
      "backgroundColor": "dangerColor",
      "confirmAction": true,
      "visible": "@{patientActive}",
      "enabled": "@{patientActive}",
      "showSeparator": "true",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "7f1960ac-81b5-42a2-8813-97222de5745a",
            "resourceIdentifier": "@{patientId}",
            "title": "Remove family member",
            "saveButtonText": "Update registration"
          }
        }
      ]
    }
  ]
}
