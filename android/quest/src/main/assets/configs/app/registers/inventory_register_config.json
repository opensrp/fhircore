{
  "appId": "app",
  "configType": "register",
  "id": "inventoryRegister",
  "pageSize": 20,
  "fhirResource": {
    "baseResource": {
      "resource": "Group",
      "dataQueries": [
        {
          "paramName": "code",
          "filterCriteria": [
            {
              "dataType": "CODEABLECONCEPT",
              "value": {
                "system": "http://snomed.info/sct",
                "code": "386452003"
              }
            }
          ]
        }
      ],
      "sortConfigs": [
        {
          "paramName": "_lastUpdated",
          "dataType": "DATE",
          "order": "DESCENDING"
        }
      ]
    },
    "relatedResources": [
      {
        "resource": "Observation",
        "searchParameter": "subject",
        "sortConfigs": [
          {
            "paramName": "date",
            "dataType": "DATE",
            "order": "DESCENDING"
          }
        ]
      },
      {
        "id": "stockOutFlags",
        "resource": "Flag",
        "searchParameter": "subject"
      },
      {
        "id": "measureReports",
        "resource": "MeasureReport",
        "searchParameter": "subject",
        "sortConfigs": [
          {
            "paramName": "_lastUpdated",
            "dataType": "DATE",
            "order": "DESCENDING"
          }
        ]
      }
    ]
  },
  "searchBar": {
    "visible": true,
    "display": "Search by name",
    "computedRules": [
      "commodityName"
    ]
  },
  "registerCard": {
    "rules": [
      {
        "name": "commodityName",
        "condition": "true",
        "actions": [
          "data.put('commodityName', fhirPath.extractValue(Group, 'Group.name'))"
        ]
      },
      {
        "name": "commodityId",
        "condition": "true",
        "actions": [
          "data.put('commodityId', fhirPath.extractValue(Group, 'Group.id'))"
        ]
      },
      {
        "name": "latestObservation",
        "priority": 1,
        "condition": "true",
        "actions": [
          "data.put('latestObservation', service.filterResources(Observation, 'Observation.status = \"preliminary\"').get(0))"
        ]
      },
      {
        "name": "runningBalance",
        "priority": 2,
        "condition": "true",
        "actions": [
          "data.put('runningBalance', data.get('latestObservation') != null ? fhirPath.extractValue(data.get('latestObservation'), 'Observation.component.value.value') : '0' )"
        ]
      },
      {
        "name": "lastUpdated",
        "priority": 2,
        "condition": "true",
        "actions": [
          "data.put('lastUpdated', fhirPath.extractValue(data.get('latestObservation'), 'Observation.effective'))"
        ]
      },
      {
        "name": "lastUpdatedDate",
        "priority": 3,
        "condition": "true",
        "actions": [
          "data.put('lastUpdatedDate', data.get('lastUpdated') != '' ? 'Last count ' + service.prettifyDate(data.get('lastUpdated')) : '')"
        ]
      },
      {
        "name": "latestObservationId",
        "priority": 2,
        "condition": "true",
        "actions": [
          "data.put('latestObservationId', fhirPath.extractValue( data.get('latestObservation'), 'Observation.id.replace(\"Observation/\",\"\")').split(\"/\").get(0) )"
        ]
      },
      {
        "name": "activeStockOutFlag",
        "priority": 1,
        "condition": "true",
        "actions": [
          "data.put('activeStockOutFlag', service.filterResources(stockOutFlags, 'Flag.status = \"active\"').get(0))"
        ]
      },
      {
        "name": "stockoutFlagId",
        "priority": 2,
        "condition": "true",
        "actions": [
          "data.put('stockoutFlagId', fhirPath.extractValue(data.get('activeStockOutFlag'), 'Flag.id.replace(\"Flag/\",\"\")').split(\"/\").get(0))"
        ]
      },
      {
        "name": "stockoutStartDate",
        "priority": 2,
        "condition": "true",
        "actions": [
          "data.put('stockoutStartDate', fhirPath.extractValue(data.get('activeStockOutFlag'), 'Flag.period.start'))"
        ]
      },
      {
        "name": "amcMeasureReport",
        "priority": 1,
        "condition": "true",
        "actions": [
          "data.put('amcMeasureReport', service.filterResources(measureReports, 'MeasureReport.measure = \"https://fhir.labs.smartregister.org/fhir/Measure/STOCKIND02\"').get(0))"
        ]
      },
      {
        "name": "amc",
        "priority": 2,
        "condition": "true",
        "actions": [
          "data.put('amc', fhirPath.extractValue(data.get('amcMeasureReport'), 'MeasureReport.contained[0].value.coding.code'))"
        ]
      },
      {
        "name": "amcNotNull",
        "priority": 3,
        "condition": "true",
        "actions": [
          "data.put('amcNotNull', data.get('amc') != '' ? data.get('amc') : '0')"
        ]
      },
      {
        "name": "stockStatus",
        "priority": 4,
        "condition": "true",
        "actions": [
          "var monthOnStock = (bal, amc) -> { var mos = bal; if(amc != null && amc != 0){ mos = bal/amc; } return mos; } ; var stockStatus = (bal, amc) -> { var mos = monthOnStock(bal, amc); var status = 'default'; if(mos >= 0 && mos <= 0.5){ status = 'Stockout'; } if(mos > 0.5 && mos < 1.0){ status = 'Understock'; } if(mos >= 1.0 && mos < 3.0){ status = 'Satisfactory'; } if(mos >= 3.0){ status = 'Overstock'; } return status; } ; data.put('stockStatus', stockStatus(new('java.lang.Double', data.get('runningBalance')), new('java.lang.Double', data.get('amcNotNull'))))"
        ]
      },
      {
        "name": "stockStatusColour",
        "priority": 5,
        "condition": "true",
        "actions": [
          "data.put('stockStatusColour', data.get('stockStatus') == 'Stockout' ? '#DD0000' : data.get('stockStatus') == 'Understock' ? '#FFA500' : data.get('stockStatus') == 'Satisfactory' ? '#38B500' : data.get('stockStatus') == 'Overstock' ? '#006EB8' : '#d3d3d3')"
        ]
      }
    ],
    "views": [
      {
        "viewType": "COLUMN",
        "children": [
          {
            "viewType": "SERVICE_CARD",
            "details": [
              {
                "viewType": "COMPOUND_TEXT",
                "primaryText": "@{commodityName}",
                "primaryTextColor": "#000000"
              },
              {
                "viewType": "COMPOUND_TEXT",
                "primaryText": "@{lastUpdatedDate}",
                "fontSize": 14.0,
                "primaryTextColor": "#5A5A5A"
              },
              {
                "viewType": "COMPOUND_TEXT",
                "primaryText": "Status:",
                "primaryTextColor": "#5A5A5A",
                "secondaryText": "@{stockStatus}",
                "secondaryTextColor" : "#FFFFFF",
                "secondaryTextBackgroundColor" : "@{stockStatusColour}",
                "secondaryTextFontWeight" :  "SEMI_BOLD",
                "fontSize": 14.0
              }
            ],
            "showVerticalDivider": false,
            "serviceButton": {
              "visible": true,
              "text": "@{runningBalance}",
              "status": "DUE",
              "fontSize": 14.0,
              "smallSized": false,
              "actions": [
                {
                  "trigger": "ON_CLICK",
                  "workflow": "LAUNCH_QUESTIONNAIRE",
                  "questionnaire": {
                    "id": "a3b8260b-d474-42ef-9ab2-a7794a0a27bc",
                    "title": "@{commodityName}",
                    "saveButtonText": "ADJUST STOCK LEVELS",
                    "setPractitionerDetails": true,
                    "setOrganizationDetails": true,
                    "resourceIdentifier": "@{commodityId}"
                  },
                  "params": [
                    {
                      "paramType": "PREPOPULATE",
                      "linkId": "650dd00d-c60b-4a3d-838a-128aad04827f",
                      "dataType": "STRING",
                      "key": "commodityName",
                      "value": "@{commodityName}"
                    },
                    {
                      "paramType": "PREPOPULATE",
                      "linkId": "d2cda03f-dc14-4f15-85ab-d5c33027aa31",
                      "dataType": "INTEGER",
                      "key": "currentBalance",
                      "value": "@{runningBalance}"
                    },
                    {
                      "paramType": "PREPOPULATE",
                      "linkId": "d6c39388-fb56-4e1f-8cfc-f199f2c89919",
                      "dataType": "STRING",
                      "key": "latestObservationId",
                      "value": "@{latestObservationId}"
                    },
                    {
                      "paramType": "PREPOPULATE",
                      "linkId": "513d5111-449e-49e0-d43a-8953fb53ba7d",
                      "dataType": "STRING",
                      "key": "stockoutFlagId",
                      "value": "@{stockoutFlagId}"
                    },
                    {
                      "paramType": "PREPOPULATE",
                      "linkId": "6c5c6fd7-749c-402b-990b-df96a92bf6c8",
                      "dataType": "STRING",
                      "key": "stockoutStartDate",
                      "value": "@{stockoutStartDate}"
                    }
                  ]
                }
              ]
            },
            "actions": [
              {
                "trigger": "ON_CLICK",
                "workflow": "LAUNCH_PROFILE",
                "id": "inventoryProfile",
                "params": [
                  {
                    "key": "commodityId",
                    "value": "@{commodityId}"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "noResults": {
    "title": "No Commodities",
    "message": "Sorry, stock commodities have not been setup yet"
  }
}
