{
  "appId": "app",
  "configType": "profile",
  "id": "otherRegistersProfile",
  "fhirResource": {
    "baseResource": {
      "resource": "Patient"
    },
    "relatedResources": [
      {
        "resource": "Condition",
        "searchParameter": "subject"
      },
      {
        "resource": "CarePlan",
        "searchParameter": "subject"
      },
      {
        "resource": "Task",
        "searchParameter": "subject",
        "sortConfigs": [
          {
            "paramName": "period",
            "dataType": "DATE"
          }
        ]
      }
    ]
  },
  "rules": [
    {
      "name": "patientFirstName",
      "condition": "true",
      "actions": [
        "data.put('patientFirstName', fhirPath.extractValue(Patient, \"Patient.name[0].select(given[0])\"))"
      ]
    },
    {
      "name": "patientMiddleName",
      "condition": "true",
      "actions": [
        "data.put('patientMiddleName', fhirPath.extractValue(Patient, \"Patient.name[0].select(text)\"))"
      ]
    },
    {
      "name": "patientLastName",
      "condition": "true",
      "actions": [
        "data.put('patientLastName', fhirPath.extractValue(Patient, \"Patient.name[0].select(family)\"))"
      ]
    },
    {
      "name": "patientName",
      "condition": "true",
      "actions": [
        "data.put('patientName', data.get('patientFirstName') + ' ' + data.get('patientMiddleName') + ' ' + data.get('patientLastName'))"
      ]
    },
    {
      "name": "patientActive",
      "condition": "true",
      "actions": [
        "data.put('patientActive', fhirPath.extractValue(Patient, 'Patient.active'))"
      ]
    },
    {
      "name": "patientTextColor",
      "condition": "true",
      "actions": [
        "data.put('patientTextColor', Patient.active ? '#000000' : 'DefaultColor')"
      ]
    },
    {
      "name": "patientIdentifier",
      "condition": "true",
      "actions": [
        "data.put('patientIdentifier', fhirPath.extractValue(Patient, 'Patient.identifier[0].value'))"
      ]
    },
    {
      "name": "patientId",
      "condition": "true",
      "actions": [
        "data.put('patientId', fhirPath.extractValue(Patient, 'Patient.id'))"
      ]
    },
    {
      "name": "patientAge",
      "condition": "true",
      "actions": [
        "data.put('patientAge', service.extractAge(Patient))"
      ]
    },
    {
      "name": "patientGender",
      "condition": "true",
      "actions": [
        "data.put('patientGender', service.extractGender(Patient))"
      ]
    },
    {
      "name": "patientDOB",
      "condition": "true",
      "actions": [
        "data.put('patientDOB', service.extractDOB(Patient, 'dd MM'))"
      ]
    },
    {
      "name": "isChild",
      "condition": "true",
      "actions": [
        "data.put('isChild', fhirPath.extractValue(Patient, \"Patient.active and (Patient.birthDate >= today() - 2 'years')\"))"
      ]
    },
    {
      "name": "canBearChild",
      "condition": "true",
      "actions": [
        "data.put('canBearChild',  fhirPath.extractValue(Patient, \"Patient.active and Patient.gender = 'female' and ((Patient.birthDate <= today() - 14 'years') and (Patient.birthDate >= today() - 49 'years'))\"))"
      ]
    },
    {
      "name": "isEligibleForFP",
      "condition": "true",
      "actions": [
        "data.put('isEligibleForFP',  fhirPath.extractValue(Patient, \"Patient.active and ((Patient.birthDate <= today() - 15 'years') and (Patient.birthDate >= today() - 49 'years'))\"))"
      ]
    },
    {
      "name": "isPregnant",
      "condition": "true",
      "actions": [
        "data.put('isPregnant', service.evaluateToBoolean(Condition, \"Condition.code.text = 'Pregnant'\", false))"
      ]
    },
    {
      "name": "pregnancyOutcomeDateCompleted",
      "condition": "true",
      "actions": [
        "data.put('pregnancyOutcomeDateCompleted', fhirPath.extractValue(service.filterResources(Condition, 'Condition.code.coding.code=\"234234234\"').get(0), \"Condition.onset <= (today() - 45 'days')\"))"
      ]
    },
    {
      "name": "isActivePnc",
      "condition": "true",
      "actions": [
        "data.put('isActivePnc', service.evaluateToBoolean(Condition, \"Condition.code.text = 'PNC' \", false))"
      ]
    },
    {
      "name": "canRegisterPregnancy",
      "condition": "true",
      "priority": 2,
      "actions": [
        "data.put('canRegisterPregnancy', data.get('canBearChild') && (!data.get('isPregnant') || !data.get('isActivePnc') || data.get('pregnancyOutcomeDateCompleted')))"
      ]
    },
    {
      "name": "canOutcomePregnancy",
      "condition": "true",
      "priority": 2,
      "actions": [
        "data.put('canOutcomePregnancy', data.get('isPregnant') && !data.get('isActivePnc'))"
      ]
    },
    {
      "name": "canEnrollToFp",
      "condition": "true",
      "priority": 2,
      "actions": [
        "data.put('canEnrollToFp', data.get('isEligibleForFP') && !data.get('isPregnant'))"
      ]
    },
    {
      "name": "isChildUnder2months",
      "condition": "true",
      "actions": [
        "data.put('isChildUnder2months', fhirPath.extractValue(Patient, \"Patient.active and (Patient.birthDate > today() - 2 'months')\"))"
      ]
    },
    {
      "name": "isChildOver2months",
      "condition": "true",
      "actions": [
        "data.put('isChildOver2months', fhirPath.extractValue(Patient, \"Patient.active and ((Patient.birthDate <= today() - 2 'months') and (Patient.birthDate >= today() - 2 'years'))\"))"
      ]
    },
    {
      "name": "latestObservations",
      "condition": "true",
      "actions": [
        "data.put('latestObservations', service.filterResources(stockObservations, \"Observation.status = 'preliminary'\"))"
      ]
    },
    {
      "name": "activeFlags",
      "condition": "true",
      "actions": [
        "data.put('activeFlags', service.filterResources(stockOutFlags, \"Flag.status = 'active'\"))"
      ]
    }
  ],
  "views": [
    {
      "viewType": "COLUMN",
      "children": [
        {
          "viewType": "CARD",
          "padding": 0,
          "content": [
            {
              "viewType": "COLUMN",
              "children": [
                {
                  "viewType": "COMPOUND_TEXT",
                  "primaryText": "@{patientName}",
                  "primaryTextColor": "#000000"
                },
                {
                  "viewType": "COMPOUND_TEXT",
                  "primaryText": "ID: #@{patientIdentifier}",
                  "primaryTextColor": "#000000"
                },
                {
                  "viewType": "SPACER",
                  "height": 10
                },
                {
                  "viewType": "PERSONAL_DATA",
                  "personalDataItems": [
                    {
                      "label": {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "Sex",
                        "primaryTextColor": "#000000"
                      },
                      "displayValue": {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "@{patientGender}",
                        "fontSize": 14,
                        "primaryTextColor": "#000000"
                      }
                    },
                    {
                      "label": {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "Age",
                        "primaryTextColor": "#000000"
                      },
                      "displayValue": {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "@{patientAge}",
                        "fontSize": 14,
                        "primaryTextColor": "#000000"
                      }
                    },
                    {
                      "label": {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "DOB",
                        "primaryTextColor": "#000000"
                      },
                      "displayValue": {
                        "viewType": "COMPOUND_TEXT",
                        "primaryText": "@{patientDOB}",
                        "fontSize": 14,
                        "primaryTextColor": "#000000"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "viewType": "SPACER",
          "height": 8
        },
        {
          "viewType": "CARD",
          "padding": 16,
          "header": {
            "viewType": "COMPOUND_TEXT",
            "primaryText": "VISITS",
            "primaryTextColor": "#6F7274",
            "fontSize": 18.0,
            "padding": 16
          },
          "content": [
            {
              "viewType": "LIST",
              "resources": [
                {
                  "id": "tasks",
                  "resourceType": "Task"
                }
              ],
              "registerCard": {
                "rules": [
                  {
                    "name": "taskStatus",
                    "condition": "true",
                    "actions": [
                      "data.put('taskStatus', fhirPath.extractValue(Task, 'Task.status'))"
                    ]
                  },
                  {
                    "name": "taskStatusColorCode",
                    "condition": "true",
                    "actions": [
                      "data.put('taskStatusColorCode', data.get('taskStatus').equals('ready') ? 'DUE' : data.get('taskStatus').equals('failed') || data.get('taskStatus').equals('cancelled') ? 'OVERDUE' : data.get('taskStatus').equals('requested') ? 'UPCOMING' : data.get('taskStatus').equals('completed') ? 'COMPLETED' : 'UPCOMING')"
                    ]
                  },
                  {
                    "name": "taskExecutionStartDate",
                    "condition": "true",
                    "actions": [
                      "data.put('taskExecutionStartDate', fhirPath.extractValue(Task, 'Task.executionPeriod.start'))"
                    ]
                  },
                  {
                    "name": "taskScheduleDate",
                    "condition": "true",
                    "priority": 2,
                    "actions": [
                      "data.put('taskScheduleDate', service.formatDate(data.get('taskExecutionStartDate'), \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"yyyy-MM-dd\"))"
                    ]
                  },
                  {
                    "name": "taskPeriodDueDate",
                    "condition": "true",
                    "actions": [
                      "data.put('taskPeriodDueDate', service.formatDate(data.get('taskExecutionStartDate'), \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"dd MMM yyyy\"))"
                    ]
                  },
                  {
                    "name": "taskDescription",
                    "condition": "true",
                    "actions": [
                      "data.put('taskDescription', fhirPath.extractValue(Task, 'Task.description'))"
                    ]
                  },
                  {
                    "name": "taskDescriptionWithStartDate",
                    "condition": "true",
                    "priority": 2,
                    "actions": [
                      "data.put('taskDescriptionWithStartDate', data.get('taskDescription') + ' ' + 'due on' + ' ' + data.get('taskPeriodDueDate'))"
                    ]
                  },
                  {
                    "name": "taskId",
                    "condition": "true",
                    "actions": [
                      "data.put('taskId', fhirPath.extractValue(Task, 'Task.id'))"
                    ]
                  },
                  {
                    "name": "taskFor",
                    "condition": "true",
                    "actions": [
                      "data.put('taskFor', fhirPath.extractValue(Task, 'Task.for.reference'))"
                    ]
                  },
                  {
                    "name": "taskQuestionnaireId",
                    "condition": "true",
                    "actions": [
                      "data.put('taskQuestionnaireId', fhirPath.extractValue(Task, 'Task.reasonReference.reference'))"
                    ]
                  }
                ],
                "views": [
                  {
                    "viewType": "BUTTON",
                    "smallSized": "false",
                    "text": "@{taskDescriptionWithStartDate}",
                    "status": "@{taskStatusColorCode}",
                    "visible": "true",
                    "enabled": "@{patientActive}",
                    "actions": [
                      {
                        "trigger": "ON_CLICK",
                        "workflow": "LAUNCH_QUESTIONNAIRE",
                        "questionnaire": {
                          "id": "@{taskQuestionnaireId}",
                          "title": "@{taskDescription}",
                          "saveButtonText": "Save",
                          "taskId": "@{taskId}",
                          "resourceIdentifier": "@{taskFor}"
                        },
                        "params": [
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "ae2f17cb-deff-48a6-8ece-27e6bd475f30",
                            "dataType": "DATE",
                            "key": "taskScheduleDate",
                            "value": "@{taskScheduleDate}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "e215bd25-8962-4ef1-8040-149cbb653781",
                            "dataType": "INTEGER",
                            "key": "mnpPreviousBalance",
                            "value": "@{mnpPreviousBalance}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "bb342c7f-39a1-4ff7-bc13-28efdc7386ab",
                            "dataType": "STRING",
                            "key": "mnpObservationId",
                            "value": "@{mnpObservationId}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "5d788dc8-284c-4c6a-8e0c-70d91bc95c97",
                            "dataType": "STRING",
                            "key": "mnpStockOutFlagId",
                            "value": "@{mnpStockOutFlagId}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "0ea6b537-08b3-48b8-aa83-c70e10fe836b",
                            "dataType": "INTEGER",
                            "key": "albendazole400mgPreviousBalance",
                            "value": "@{albendazole400mgPreviousBalance}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "236022f2-e608-4e51-a56d-c9e21c4271cd",
                            "dataType": "STRING",
                            "key": "albendazole400mgObservationId",
                            "value": "@{albendazole400mgObservationId}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "7b02d76c-4752-41d4-98d2-96a1fc91652f",
                            "dataType": "STRING",
                            "key": "albendazole400mgStockOutFlagId",
                            "value": "@{albendazole400mgStockOutFlagId}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "25cc8d26-ac42-475f-be79-6f1d62a44881",
                            "dataType": "INTEGER",
                            "key": "maleCondomPreviousBalance",
                            "value": "@{maleCondomPreviousBalance}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "48245462-0198-48ab-f5c4-ca4ca3da5403",
                            "dataType": "INTEGER",
                            "key": "femaleCondomPreviousBalance",
                            "value": "@{femaleCondomPreviousBalance}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "9fac39bd-9750-4c1d-b355-1961de4e37f3",
                            "dataType": "INTEGER",
                            "key": "microgynonPreviousBalance",
                            "value": "@{microgynonPreviousBalance}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "8f8dd1a8-528c-4415-95ce-59eaa9cc2bd3",
                            "dataType": "INTEGER",
                            "key": "microlutPreviousBalance",
                            "value": "@{microlutPreviousBalance}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "5e0cde01-7df6-40b6-ad42-d8aa52a27187",
                            "dataType": "INTEGER",
                            "key": "sayanaPressPreviousBalance",
                            "value": "@{sayanaPressPreviousBalance}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "955c5b30-0f08-4720-8567-99ef58350615",
                            "dataType": "STRING",
                            "key": "maleCondomObservationId",
                            "value": "@{latestMaleCondomObservationId}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "3821961e-79db-4120-99db-079548307454",
                            "dataType": "STRING",
                            "key": "femaleCondomObservationId",
                            "value": "@{latestFemaleCondomObservationId}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "4857a2ac-85c7-47aa-a246-1f0bac8ff56c",
                            "dataType": "STRING",
                            "key": "microgynonObservationId",
                            "value": "@{microgynonObservationId}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "6c204a32-da95-4251-bf3f-bbc6d3e69f1a",
                            "dataType": "STRING",
                            "key": "microlutObservationId",
                            "value": "@{microlutObservationId}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "b8de4749-8d94-40d4-9a6f-fe7fa2b15cc4",
                            "dataType": "STRING",
                            "key": "sayanaPressObservationId",
                            "value": "@{sayanaPressObservationId}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "56577a66-15ae-4612-bee9-a2d4168082e8",
                            "dataType": "STRING",
                            "key": "maleCondomStockOutFlagId",
                            "value": "@{maleCondomStockOutFlagId}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "30be53b9-6a9c-49fd-8ae7-6e8ff1da8830",
                            "dataType": "STRING",
                            "key": "femaleCondomStockOutFlagId",
                            "value": "@{femaleCondomStockOutFlagId}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "dd628ef4-1363-44ac-8d70-1ad6fc61809e",
                            "dataType": "STRING",
                            "key": "microgynonStockOutFlagId",
                            "value": "@{microgynonStockOutFlagId}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "636108ea-07b0-4f8b-8f20-7cf0518deaca",
                            "dataType": "STRING",
                            "key": "microlutStockOutFlagId",
                            "value": "@{microlutStockOutFlagId}"
                          },
                          {
                            "paramType": "PREPOPULATE",
                            "linkId": "bf3ccd65-e64e-4dc5-a524-b6b1e6e17a65",
                            "dataType": "STRING",
                            "key": "sayanaPressStockOutFlagId",
                            "value": "@{sayanaPressStockOutFlagId}"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "overFlowMenuItems": [
    {
      "title": "Registration info",
      "titleColor": "@{patientTextColor}",
      "visible": "true",
      "enabled": "@{patientActive}",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "4",
            "title": "Member registration info",
            "saveButtonText": "Update registration",
            "setPractitionerDetails": true,
            "setOrganizationDetails": true,
            "type": "EDIT",
            "resourceIdentifier": "@{patientId}",
            "planDefinitions": [
              "81"
            ]
          }
        }
      ]
    },
    {
      "title": "Register Pregnancy",
      "titleColor": "@{patientTextColor}",
      "visible": "@{canRegisterPregnancy}",
      "enabled": "@{patientActive}",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "9b22f3ed-e7e1-4222-bf72-1ced42696189",
            "title": "Record to ANC",
            "resourceIdentifier": "@{patientId}",
            "planDefinitions": [
              "a881d53a-590c-4d52-ae0f-c87b7ff04148"
            ]
          }
        }
      ]
    },
    {
      "title": "Pregnancy Outcome",
      "titleColor": "@{patientTextColor}",
      "visible": "@{canOutcomePregnancy}",
      "enabled": "@{patientActive}",
      "actions": [
        {
          "trigger": "ON_CLICK",
          "workflow": "LAUNCH_QUESTIONNAIRE",
          "questionnaire": {
            "id": "345",
            "title": "Pregnancy outcome",
            "resourceIdentifier": "@{patientId}",
            "planDefinitions": [
              "350"
            ]
          },
          "params": [
            {
              "paramType": "PREPOPULATE",
              "linkId": "25cc8d26-ac42-475f-be79-6f1d62a44881",
              "dataType": "INTEGER",
              "key": "maleCondomPreviousBalance",
              "value": "@{maleCondomPreviousBalance}"
            },
            {
              "paramType": "PREPOPULATE",
              "linkId": "48245462-0198-48ab-f5c4-ca4ca3da5403",
              "dataType": "INTEGER",
              "key": "femaleCondomPreviousBalance",
              "value": "@{femaleCondomPreviousBalance}"
            },
            {
              "paramType": "PREPOPULATE",
              "linkId": "955c5b30-0f08-4720-8567-99ef58350615",
              "dataType": "STRING",
              "key": "maleCondomObservationId",
              "value": "@{latestMaleCondomObservationId}"
            },
            {
              "paramType": "PREPOPULATE",
              "linkId": "3821961e-79db-4120-99db-079548307454",
              "dataType": "STRING",
              "key": "femaleCondomObservationId",
              "value": "@{latestFemaleCondomObservationId}"
            },
            {
              "paramType": "PREPOPULATE",
              "linkId": "56577a66-15ae-4612-bee9-a2d4168082e8",
              "dataType": "STRING",
              "key": "maleCondomStockOutFlagId",
              "value": "@{maleCondomStockOutFlagId}"
            },
            {
              "paramType": "PREPOPULATE",
              "linkId": "30be53b9-6a9c-49fd-8ae7-6e8ff1da8830",
              "dataType": "STRING",
              "key": "femaleCondomStockOutFlagId",
              "value": "@{femaleCondomStockOutFlagId}"
            }
          ]
        }
      ]
    }
  ]
}