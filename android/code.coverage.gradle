apply plugin: "com.github.kt3k.coveralls"
apply plugin: 'jacoco'

jacoco {
    toolVersion = versions.jacoco_tool
}

coveralls {
    sourceDirs = ["$project.projectDir/src/main/java"]
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoTestReportRelease/jacocoTestReportRelease.xml"
}

tasks.coveralls {
    dependsOn 'jacocoTestReport'
}

project.afterEvaluate {
    // Grab all build types and product flavors
    def buildTypes = android.buildTypes.collect { type ->
        type.name
    }
    def productFlavors = android.productFlavors.collect { flavor ->
        flavor.name
    }
    // When no product flavors defined, use empty
    if (!productFlavors) productFlavors.add('')
    productFlavors.each { productFlavorName ->
        buildTypes.each { buildTypeName ->
            def sourceName, sourcePath
            if (!productFlavorName) {
                sourceName = sourcePath = "${buildTypeName}"
            } else {
                sourceName = "${productFlavorName}${buildTypeName.capitalize()}"
                sourcePath = "${productFlavorName}/${buildTypeName}"
            }
            def testTaskName = "test${sourceName.capitalize()}UnitTest"
            // Create coverage task of form 'testFlavorTypeCoverage' depending on 'testFlavorTypeUnitTest'
            task "${testTaskName}Coverage" (type:JacocoReport, dependsOn: "$testTaskName") {
                group = "Reporting"
                description = "Generate Jacoco coverage reports on the ${sourceName.capitalize()} build."

                def fileFilter = [
                        '**/R.class',
                        '**/R$*.class',
                        '**/*$ViewInjector*.*',
                        '**/*$ViewBinder*.*',
                        '**/BuildConfig.*',
                        '**/Manifest*.*',
                        '**/*App.*',
                        '**/*Component.*',
                        '**/*Module.*',
                        '**/*Activity.*',
                        '**/*Fragment.*',
                        '**/*Test*.*',
                        'android*/**/*.*',
                        '**/*$ViewBinder*.*'
                ]
                def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/$productFlavorName/$buildTypeName", excludes: fileFilter)
                def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/$sourceName", excludes: fileFilter)

                classDirectories.from(files([debugTree], [kotlinDebugTree]))
                def coverageSourceDirs = [
                        "src/main/java",
                        "src/$productFlavorName/java",
                        "src/$buildTypeName/java"
                ]
                additionalSourceDirs.from(files(coverageSourceDirs))
                sourceDirectories.from(files(coverageSourceDirs))
                executionData.from(files("${project.buildDir}/jacoco/${testTaskName}.exec"))
                reports {
                    xml.enabled = true
                    html.enabled = true
                }
            }
        }
    }
}