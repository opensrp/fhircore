name: Manual APK Release
run-name: Generating a FHIR Core Release APK 🚀
on: 
   workflow_dispatch:
    inputs:
      buildType:
        description: 'Select APK Build Type'     
        required: true
        default: 'Release'
        type: choice
        options:
          - Debug
          - DebugNonProxy
          - Release
      flavor:
        description: 'APK flavor e.g. sidBunda'
        type: string   
        required: true
      isAab:
        description: 'Generate as AAB (Playstore release only)'     
        required: true
        type: boolean
        default: false
jobs:
   build:
      runs-on: ubuntu-latest
      permissions:
         id-token: write
         contents: read
      steps:
         - uses: actions/checkout@v3
         - name: Import Secrets from Vault
           id: import-secrets
           uses: hashicorp/vault-action@v2.8.0
           with:
              url: https://vault.onalabs.org
              token: ${{ secrets.VAULT_TOKEN }}
              tlsSkipVerify: true
              secrets: |
                kv-v2-fhircore/data/opensrp-shared KEYSTORE_ALIAS | KEYSTORE_ALIAS;
                kv-v2-fhircore/data/opensrp-shared KEYSTORE_FILE | KEYSTORE_FILE;
                kv-v2-fhircore/data/opensrp-shared KEYSTORE_PASSWORD | KEYSTORE_PASSWORD;
                kv-v2-fhircore/data/opensrp-shared KEY_PASSWORD | KEY_PASSWORD;
                kv-v2-fhircore/data/opensrp-shared LOCAL_PROPERTIES_FILE | LOCAL_PROPERTIES_FILE;
                kv-v2-fhircore/data/opensrp-${{ github.event.inputs.flavor }} KEYSTORE_ALIAS | KEYSTORE_ALIAS;
                kv-v2-fhircore/data/opensrp-${{ github.event.inputs.flavor }} KEYSTORE_FILE | KEYSTORE_FILE;
                kv-v2-fhircore/data/opensrp-${{ github.event.inputs.flavor }} KEYSTORE_PASSWORD | KEYSTORE_PASSWORD;
                kv-v2-fhircore/data/opensrp-${{ github.event.inputs.flavor }} KEY_PASSWORD | KEY_PASSWORD;
                kv-v2-fhircore/data/opensrp-${{ github.event.inputs.flavor }} LOCAL_PROPERTIES_FILE | LOCAL_PROPERTIES_FILE;

         - name: Decode & Generate Keystore file
           run: echo $ENCODED_KEYSTORE | base64 -di > "${HOME}"/fhircore.keystore.jks
           env:
             ENCODED_KEYSTORE: ${{ secrets.KEYSTORE_FILE }}   
   
         - name: Checkout 🛎️
           uses: actions/checkout@v2
           with:
             fetch-depth: 2
   
         - name: Set up JDK 17
           uses: actions/setup-java@v1
           with:
             java-version: 17
         
         - name: Grant execute permission for gradlew
           run: chmod +x gradlew
           working-directory: android
   
         - name: Decode & Generate local.properties file
           run: echo $LOCAL_PROPERTIES | base64 -di > local.properties
           working-directory: android
           env:
             LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES_FILE }} 
   
         - name: Decode & Generate keystore.properties file
           run: echo $KEYSTORE_PROPERTIES | base64 -di > keystore.properties
           working-directory: android
           env:
             KEYSTORE_PROPERTIES: ${{ secrets.KEYSTORE_FILE }}

         - id: product-flavor
           name: Generate Product Flavor identifier
           run: |
             flavorCapitalized=$(echo ${{ github.event.inputs.flavor }} | sed 's/.*/\u&/')
             buildTypeCapitalized=$(echo ${{ github.event.inputs.buildType }} | sed 's/.*/\u&/')
             echo "::set-output name=idCapitalized::$flavorCapitalized$buildTypeCapitalized" 
             
         - name: Generate AAB (Android App Bundle) file
           if: github.event.inputs.isAab == 'true' 
           run: ./gradlew :quest:bundle${{steps.product-flavor.outputs.idCapitalized}} --stacktrace
           working-directory: android
           
         - name: Upload AAB file to tag assets
           if: github.event.inputs.isAab == 'true' 
           uses: svenstaro/upload-release-action@v2
           with:
             repo_token: ${{ secrets.GITHUB_TOKEN }}
             file: android/quest/build/outputs/bundle/${{ github.event.inputs.flavor }}/release/quest-${{ github.event.inputs.flavor }}-release.aab
             asset_name: "$tag.aab"
             tag: ${{ github.ref }}
             overwrite: true
         
         - name: Generate APK (Android App PacKage) file
           if: github.event.inputs.isAab == 'false' 
           run: ./gradlew :quest:assemble${{steps.product-flavor.outputs.idCapitalized}} --stacktrace
           working-directory: android
           
         - name: Test APK file generation
           run: |
               ls -lha android/quest/build/outputs/apk/${{ github.event.inputs.flavor }}/release/quest-${{ github.event.inputs.flavor }}-release.apk --stacktrace
       
